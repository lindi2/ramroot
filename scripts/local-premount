#!/bin/sh
case "$1" in
    prereqs)
	echo ""
	exit 0
	;;
esac
echo "ramroot: local-premount"
if [ "$ramroot_fs" = "jffs2" ]; then
    echo FSTYPE=jffs2 >> /conf/param.conf
    echo ROOTFLAGS= >> /conf/param.conf
    echo ROOT=/dev/mtdblock0 >> /conf/param.conf
    echo readonly=n >> /conf/param.conf
    rmmod mtdram
    modprobe mtdram total_size=$ramroot_fs_size erase_size=128
    modprobe mtdblock
fi
if [ "$ramroot_fs" = "tmpfs" ]; then
    size=$(expr $ramroot_fs_size '*' 1024)
    echo ROOTFSTYPE=tmpfs >> /conf/param.conf
    echo ROOTFLAGS=-osize=$size >> /conf/param.conf
    echo ROOT=none >> /conf/param.conf
    echo readonly=n >> /conf/param.conf
fi
if [ "$ramroot_fs" = "fusecompress" ]; then
    modprobe fuse
    mkdir /tmpfs
    mem="$(free | grep Mem: | awk '{ print $2 }')"
    size=$(expr $mem '*' 1024)
    mount none /tmpfs -t tmpfs -osize=$size
    fusecompress /tmpfs /root
    echo FSTYPE=dummy >> /conf/param.conf
    echo ROOTFLAGS= >> /conf/param.conf
    echo ROOT=none >> /conf/param.conf
    echo readonly=n >> /conf/param.conf
fi
if [ "$ramroot_fs" = "swap" ]; then
    d="/dev/disk/by-uuid/$ramroot_fs_uuid"
    while [ ! -e $d ]; do
	ls -l /dev/disk/by-uuid
	echo "waiting for ramroot_fs"
	sleep 2
    done

    if [ $(/lib/udev/vol_id -t $d) != "swap" ]; then
	echo "ramroot_fs_uuid does not point to swap!"
	/bin/sh
    fi

    modprobe loop
    losetup -o 4096 /dev/loop7 $d
    mke2fs /dev/loop7
    echo FSTYPE=ext2 >> /conf/param.conf
    echo ROOTFLAGS= >> /conf/param.conf
    echo ROOT=/dev/loop7 >> /conf/param.conf
    echo readonly=n >> /conf/param.conf
fi

cat > /ramroot-mountroot <<EOF
#!/bin/sh
mount -t \$ROOTFSTYPE \$ROOTFLAGS \$ROOT /root
mkdir /fs
modprobe ext4
modprobe ext2 # for amd64 (x86 has CONFIG_EXT2_FS=y)
while ! mount -n -oro /dev/disk/by-uuid/\${ramroot_uuid} /fs; do
    echo "ramroot: waiting for \${ramroot_uuid}"
    ls -l /dev/disk/by-uuid
    sleep 2
done
sleep 1
if [ -e /fs/snapshot/\${ramroot_snapshot}.tar.zst ]; then
   compressed=1
else
   compressed=0
fi
(
    total_kbytes="\$(expr \$(cat /fs/snapshot/\$ramroot_snapshot/etc/ramroot/size) / 1024)"
    printed_percentage=0
    while [ -d /fs ]; do
        current_kbytes="\$(busybox df \$rootmnt | tail -n1 | awk '{print \$3}')"
        target_percentage="\$(expr 100 \* \$current_kbytes / \$total_kbytes)"
        if [ \$printed_percentage -lt \$target_percentage ]; then
            if [ "\$compressed" = "1" ]; then
                echo "ramroot: loading compressed snapshot \$ramroot_snapshot: \$target_percentage%"
            else
                echo "ramroot: loading snapshot \$ramroot_snapshot: \$target_percentage%"
            fi
            printed_percentage="\$target_percentage"
        fi
        sleep 1
    done
) &

if [ "\$compressed" = "1" ]; then
    # Workaround https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1004430
    if [ -e /etc/passwd ]; then
        mv /etc/passwd /etc/passwd.backup
    fi
    if [ -e /etc/group ]; then
        mv /etc/group /etc/group.backup
    fi
    cp /fs/snapshot/\${ramroot_snapshot}/etc/passwd /etc/passwd
    cp /fs/snapshot/\${ramroot_snapshot}/etc/group /etc/group
    /sbin/tar --numeric-owner --selinux --acls --xattrs --xattrs-include=security.* -x -f /fs/snapshot/\${ramroot_snapshot}.tar.zst --zstd -C \${rootmnt} --one-top-level=.
    if [ -e /etc/passwd.backup ]; then
        mv /etc/passwd.backup /etc/passwd
    fi
    if [ -e /etc/group.backup ]; then
        mv /etc/group.backup /etc/group
    fi
else
    (cd /fs/snapshot/\${ramroot_snapshot} && /sbin/tar -c --numeric-owner --selinux --acls --xattrs --xattrs-include=security.* -f - . | /sbin/tar --numeric-owner --selinux --acls --xattrs --xattrs-include=security.* -x -f - -C \${rootmnt} --one-top-level=.)
fi

boot_uuid="\$(cd /dev/disk/by-uuid; echo \$ramroot_uuid)"
echo "boot_uuid=\${boot_uuid}" > \${rootmnt}/etc/ramroot/boot-info
echo "boot_snapshot=\${ramroot_snapshot}" >> \${rootmnt}/etc/ramroot/boot-info
echo "boot_uptime=\$(cut -d' ' -f1 /proc/uptime)" >> \${rootmnt}/etc/ramroot/boot-info
umount /fs
rmdir /fs
exit 0
EOF
chmod a+x /ramroot-mountroot
cat >> /conf/param.conf <<EOF
mountroot()
{
    /ramroot-mountroot
}
rm /conf/param.conf
EOF
exit 0
