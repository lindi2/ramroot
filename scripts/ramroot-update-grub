#!/bin/bash
build_grubenv() {
    (
	echo "# GRUB Environment Block"
	cat
	for i in $(seq 1 1024); do
	    echo -n "#"
	done
    ) | dd bs=1 count=1024 2> /dev/null
}

if [ "$ramroot" = "" ]; then
    echo "Use only with ramroot-admin"
    exit 1
fi

default="$1"
fallback="$2"
fallback_timeout="$3"

if [ "$default" = "" ]; then
    echo "usage: $0 DEFAULT-SNAPSHOT [FALLBACK-SNAPSHOT FALLBACK-TIMEOUT]" 1>&2
    exit 1
fi

if [ ! -d "$ramroot/snapshot/$default/boot" ]; then
    echo "Default snapshot does not exist"
    exit 1
fi

if [ -e /etc/ramroot/boot-info ]; then
    . /etc/ramroot/boot-info
fi

entries=$(mktemp)
idx=0
for i in $(cd $ramroot/snapshot && echo *); do
    if [ "$i" = "$default" ]; then
	default_idx=$idx
    fi
    if [ "$i" = "$fallback" ]; then
	fallback_idx=$idx
    fi
    title="$(cat $ramroot/snapshot/$i/etc/ramroot/grub-title)"
    extraopts=" ramroot_uuid=$boot_uuid ramroot_snapshot=$i debug=1"
    extraopts+=" $(cat $ramroot/snapshot/$i/etc/ramroot/grub-extraopts)"
    if [ "$fallback" != "" -a "$i" = "$default" ]; then
	extraopts+=" ramroot_watchdog=$fallback_timeout"
    fi
    cat >> $entries <<EOF
menuentry '$title' --class debian --class gnu-linux --class gnu --class os {
EOF
    if [ "$fallback" != "" -a "$i" = "$default" ]; then
	echo " set savedefault=$fallback_idx" >> $entries
	echo " save_env savedefault" >> $entries
    fi
    cat >> $entries <<EOF
 insmod part_msdos
 insmod ext2
 set root='(hd0,msdos1)'
 search --no-floppy --fs-uuid --set $boot_uuid
 echo 'Loading $title'
 linux /snapshot/$i/vmlinuz $extraopts
 echo 'Loading initial ramdisk ...'
 initrd /snapshot/$i/initrd.img
 echo 'Now booting the kernel ...'
}
EOF
    echo >> $entries
    idx="$(expr $idx + 1)"
done

newlst=$(mktemp)
echo "set timeout=10" >> $newlst
echo "set root='(hd0,msdos1)'" >> $newlst
if [ "$fallback" != "" ]; then
    echo "load_env" >> $newlst
    echo "set default=\${savedefault}" >> $newlst
else
    echo "set default=\"$default_idx\"" >> $newlst
fi
echo >> $newlst
cat $entries >> $newlst
rm $entries

if ! grep initrd $newlst > /dev/null; then
    echo incomplete menu.lst
    exit 1
fi

if [ "$ramroot_build" = "" ]; then
    mount -o remount,rw $ramroot
fi
mv $newlst $ramroot/boot/grub/grub.cfg
if [ "$fallback" != "" ]; then
    echo "savedefault=$default_idx" | build_grubenv > $ramroot/boot/grub/grubenv
else
    echo -n "" | build_grubenv > $ramroot/boot/grub/grubenv
fi
if [ "$ramroot_build" = "" ]; then
    mount -o remount,ro $ramroot
fi
