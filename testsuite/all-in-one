#!/bin/bash
set -e
set -x
export LC_ALL=C
target="$1"
port="$2"
known_hosts="$(mktemp)"
run="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=$known_hosts -l root -p $port $target"

# check that we are talking to a real ramroot system
while [ "$($run hostname)" != "unconfigured-ramroot" ]; do
    sleep 10;
done
$run [ -d /etc/ramroot ]

# check filesystem
[ "$($run '. /etc/ramroot/boot-info; fsck -n /dev/disk/by-uuid/$boot_uuid'|grep ": clean,")" != "" ]

# create a snapshot and boot to it
$run apt-get update
$run apt-get -y --force-yes install rsync psmisc
$run "echo phase1 > /etc/hostname"
$run ramroot snapshot create phase1
$run ramroot snapshot enable latest
echo b | $run dd of=/proc/sysrq-trigger &
sleep 10
while [ "$($run hostname)" != "phase1" ]; do
    sleep 10;
done

# boot back to initial snapshot
$run ramroot snapshot enable 0
echo b | $run dd of=/proc/sysrq-trigger &
sleep 10
while [ "$($run hostname)" != "unconfigured-ramroot" ]; do
    sleep 10;
done

# boot again to snapshot 1
$run ramroot snapshot enable 1
echo b | $run dd of=/proc/sysrq-trigger &
sleep 10
while [ "$($run hostname)" != "phase1" ]; do
    sleep 10;
done

# create snapshot 2 and boot to it with watchdog fallback
$run "echo phase2 > /etc/hostname"
$run ramroot snapshot create "phase2"
$run ramroot snapshot enable latest fallback current 120
echo b | $run dd of=/proc/sysrq-trigger &
sleep 10
while [ "$($run hostname)" != "phase2" ]; do
    sleep 10;
done

# kill sshd and wait for watchdog to save us
$run killall sshd || true
while [ "$($run hostname)" != "phase1" ]; do
    sleep 10;
done

echo "Testsuite passed!"
